<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wm.project.project.dao.OrdersDao">

    <resultMap type="com.wm.project.project.entity.Orders" id="OrdersMap">
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="totalPrice" column="total_price" jdbcType="INTEGER"/>
        <result property="payStatus" column="pay_status" jdbcType="INTEGER"/>
        <result property="payType" column="pay_type" jdbcType="INTEGER"/>
        <result property="payTime" column="pay_time" jdbcType="TIMESTAMP"/>
        <result property="orderStatus" column="order_status" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userPhone" column="user_phone" jdbcType="VARCHAR"/>
        <result property="userAddress" column="user_address" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="goodsIntro" column="goods_intro" jdbcType="TIMESTAMP"/>

    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrdersMap">
        select
          order_id, order_no, user_id, total_price, pay_status, pay_type, pay_time, order_status, user_name, user_phone, user_address, is_deleted, create_time, update_time
        from orders
        where order_id = #{orderId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrdersMap">
        select
          order_id, order_no, user_id, total_price, pay_status, pay_type, pay_time, order_status, user_name, user_phone, user_address, is_deleted, create_time, update_time
        from orders
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="orderNo != null and orderNo != ''">
                and order_no = #{orderNo}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="totalPrice != null">
                and total_price = #{totalPrice}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
            <if test="payType != null">
                and pay_type = #{payType}
            </if>
            <if test="payTime != null">
                and pay_time = #{payTime}
            </if>
            <if test="orderStatus != null">
                and order_status = #{orderStatus}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone = #{userPhone}
            </if>
            <if test="userAddress != null and userAddress != ''">
                and user_address = #{userAddress}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from orders
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="orderNo != null and orderNo != ''">
                and order_no = #{orderNo}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="totalPrice != null">
                and total_price = #{totalPrice}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
            <if test="payType != null">
                and pay_type = #{payType}
            </if>
            <if test="payTime != null">
                and pay_time = #{payTime}
            </if>
            <if test="orderStatus != null">
                and order_status = #{orderStatus}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone = #{userPhone}
            </if>
            <if test="userAddress != null and userAddress != ''">
                and user_address = #{userAddress}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="orderId" useGeneratedKeys="true">
        insert into orders(order_id,order_no, user_id, total_price, pay_status, pay_type, pay_time, order_status, user_name, user_phone, user_address, is_deleted, create_time, update_time,goods_intro)
        values (#{orderId},#{orderNo}, #{userId}, #{totalPrice}, #{payStatus}, #{payType}, #{payTime}, #{orderStatus}, #{userName}, #{userPhone}, #{userAddress}, #{isDeleted}, #{createTime}, #{updateTime},#{goodsIntro})
    </insert>

    <insert id="insertBatch" keyProperty="orderId" useGeneratedKeys="true">
        insert into orders(order_no, user_id, total_price, pay_status, pay_type, pay_time, order_status, user_name, user_phone, user_address, is_deleted, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.orderNo}, #{entity.userId}, #{entity.totalPrice}, #{entity.payStatus}, #{entity.payType}, #{entity.payTime}, #{entity.orderStatus}, #{entity.userName}, #{entity.userPhone}, #{entity.userAddress}, #{entity.isDeleted}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="orderId" useGeneratedKeys="true">
        insert into orders(order_no, user_id, total_price, pay_status, pay_type, pay_time, order_status, user_name, user_phone, user_address, is_deleted, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderNo}, #{entity.userId}, #{entity.totalPrice}, #{entity.payStatus}, #{entity.payType}, #{entity.payTime}, #{entity.orderStatus}, #{entity.userName}, #{entity.userPhone}, #{entity.userAddress}, #{entity.isDeleted}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        order_no = values(order_no),
        user_id = values(user_id),
        total_price = values(total_price),
        pay_status = values(pay_status),
        pay_type = values(pay_type),
        pay_time = values(pay_time),
        order_status = values(order_status),
        user_name = values(user_name),
        user_phone = values(user_phone),
        user_address = values(user_address),
        is_deleted = values(is_deleted),
        create_time = values(create_time),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update orders
        <set>
            <if test="orderNo != null and orderNo != ''">
                order_no = #{orderNo},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="totalPrice != null">
                total_price = #{totalPrice},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
            <if test="payType != null">
                pay_type = #{payType},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userPhone != null and userPhone != ''">
                user_phone = #{userPhone},
            </if>
            <if test="userAddress != null and userAddress != ''">
                user_address = #{userAddress},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from orders where order_id = #{orderId}
    </delete>

    <select id="selectPageByOrder" resultMap="OrdersMap">
        select * from orders

        <where>

            <if test="userId != null">
                user_id=#{userId}
            </if>
            <if test="orderStatus != null">
              and  order_status=#{orderStatus}
            </if>
            <if test="userName != null and userName != ''">
                and user_name  like concat('%',#{userName},'%')
            </if>

        </where>
    </select>
    <select id="selectAll" resultMap="OrdersMap">
        select * from orders

    </select>

    <update id="changeOrderStatus">
        update orders
        <set>
            order_status=#{orderStatus}
        </set>
        where order_no = #{orderNo}
    </update>

    <select id="selectByOrderNo" resultMap="OrdersMap">
        select * from Orders where order_no=#{orderNo}
    </select>

    <select id="selectByUserName" resultMap="OrdersMap">
        select  * from  Orders where order_status=#{orderStatus} and user_name=#{userName}
    </select>
<select id="selectByUserName2" resultMap="OrdersMap">
    select  * from Orders where user_name=#{userName}
</select>

</mapper>

