<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wm.project.project.dao.UsersDao">

    <resultMap type="com.wm.project.project.entity.Users" id="UsersMap">
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="loginName" column="login_name" jdbcType="VARCHAR"/>
        <result property="passwordMd5" column="password_md5" jdbcType="VARCHAR"/>
        <result property="introduceSign" column="introduce_sign" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
        <result property="lockedFlag" column="locked_flag" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>

        <result property="role" column="role" jdbcType="INTEGER"/>
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>

        <result property="headUrl" column="head_url" jdbcType="VARCHAR"/>
    </resultMap>

<!--    分页查询-->
    <select id="selectPageByUsers" resultMap="UsersMap">
        select
            *
        from users
        <where>
            <if test="usersId != null">
                id = #{id}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name like concat('%',#{nickName},'%')
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name = #{loginName}
            </if>
            <if test="studentName != null and studentName != ''">
                and student_name= #{studentName}
            </if>
        </where>

    </select>
    <select id="selectAll" resultMap="UsersMap">
        select
            *
        from users

    </select>
    <select id="selectByLoginName" resultMap="UsersMap">
        select
            *
        from users
        where login_name = #{loginName}
    </select>
    <!--查询单个-->
    <select id="queryById" resultMap="UsersMap">
        select
          *
        from users
        where user_id = #{userId}
    </select>


    <select id="selectByPassword" resultMap="UsersMap">
        select
            *
        from users
        where password_md5 = #{password_md5}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UsersMap">
        select
         *
        from users
        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name = #{loginName}
            </if>
            <if test="passwordMd5 != null and passwordMd5 != ''">
                and password_md5 = #{passwordMd5}
            </if>
            <if test="introduceSign != null and introduceSign != ''">
                and introduce_sign = #{introduceSign}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
            <if test="lockedFlag != null">
                and locked_flag = #{lockedFlag}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from users
        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name = #{loginName}
            </if>
            <if test="passwordMd5 != null and passwordMd5 != ''">
                and password_md5 = #{passwordMd5}
            </if>
            <if test="introduceSign != null and introduceSign != ''">
                and introduce_sign = #{introduceSign}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
            <if test="lockedFlag != null">
                and locked_flag = #{lockedFlag}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into users(user_id,nick_name, login_name, password_md5, introduce_sign, address, is_deleted, locked_flag, create_time,role,student_name,phone,head_url)
        values (#{userId},#{nickName}, #{loginName}, #{passwordMd5}, #{introduceSign}, #{address}, 0, 0, current_timestamp,#{role},#{studentName},#{phone},#{headUrl})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into users(nick_name, login_name, password_md5, introduce_sign, address, is_deleted, locked_flag, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.nickName}, #{entity.loginName}, #{entity.passwordMd5}, #{entity.introduceSign}, #{entity.address}, #{entity.isDeleted}, #{entity.lockedFlag}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into users(nick_name, login_name, password_md5, introduce_sign, address, is_deleted, locked_flag, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickName}, #{entity.loginName}, #{entity.passwordMd5}, #{entity.introduceSign}, #{entity.address}, #{entity.isDeleted}, #{entity.lockedFlag}, #{entity.createTime})
        </foreach>
        on duplicate key update
        nick_name = values(nick_name),
        login_name = values(login_name),
        password_md5 = values(password_md5),
        introduce_sign = values(introduce_sign),
        address = values(address),
        is_deleted = values(is_deleted),
        locked_flag = values(locked_flag),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update users
        <set>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="loginName != null and loginName != ''">
                login_name = #{loginName},
            </if>
            <if test="passwordMd5 != null and passwordMd5 != ''">
                password_md5 = #{passwordMd5},
            </if>
            <if test="introduceSign != null and introduceSign != ''">
                introduce_sign = #{introduceSign},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="lockedFlag != null">
                locked_flag = #{lockedFlag},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where user_id = #{userId}
    </update>

<!--    IsCancellation-->

    <update id="IsCancellation">
    update users
    <set>
        is_deleted=1
    </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from users where user_id = #{userId}
    </delete>

    <select id="selectByUsersId" resultMap="UsersMap">
    select
    *
    from users
    where user_id = #{userId}
</select>

</mapper>
